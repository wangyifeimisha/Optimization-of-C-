//-----------------------------------------------------------------------------
// Copyright 2022, Ed Keenan, all rights reserved.
//----------------------------------------------------------------------------- 

#include "_UnitTestConfiguration.h"
#include "Node.h"
#include "Bloated.h"
#include "JediHotCold.h"
#include "JediHotNode.h"
#include "JediRedirect.h"
#include "TestJediHotCold.h"

// ----------------------------------
// ---     DO NOT MODIFY FILE     ---
// ----------------------------------

static JediHotCold *pHotCold = nullptr;
extern bool JediConvert_Test;

TEST_WITH_TEARDOWN(Jedi_Convert_HotCold, TestConfig::ALL)
{

	// Cannot add data to class
	CHECK(sizeof(Node) == 540);
	CHECK(sizeof(Bloated) == 4);
	CHECK(sizeof(JediRedirect) == 32);
	CHECK(sizeof(JediHotCold) == 12);

	{
		Node tmp;
		CHECK(sizeof(Node) == 540);
		CHECK(((unsigned int)&tmp.pNext - (unsigned int)&tmp) == 0);
		CHECK(((unsigned int)&tmp.pPrev - (unsigned int)&tmp) == 4);
		CHECK(((unsigned int)&tmp.y - (unsigned int)&tmp) == 28);
		CHECK(((unsigned int)&tmp.MA - (unsigned int)&tmp) == 72);
		CHECK(((unsigned int)&tmp.name - (unsigned int)&tmp) == 337);
		CHECK(((unsigned int)&tmp.key - (unsigned int)&tmp) == 532);
		CHECK(((unsigned int)&tmp.dd - (unsigned int)&tmp) == 536);
	}

	{
		JediColdNode tmp;
		CHECK(sizeof(JediColdNode) == 520);
		CHECK(((unsigned int)&tmp.key - (unsigned int)&tmp) == 0);
		CHECK(((unsigned int)&tmp.aa - (unsigned int)&tmp) == 4);
		CHECK(((unsigned int)&tmp.x - (unsigned int)&tmp) == 8);
		CHECK(((unsigned int)&tmp.A - (unsigned int)&tmp) == 24);
		CHECK(((unsigned int)&tmp.MA - (unsigned int)&tmp) == 72);
		CHECK(((unsigned int)&tmp.name - (unsigned int)&tmp) == 392);
	}

	{
		JediHotNode tmp;
		CHECK(sizeof(JediHotNode) == 44);
		CHECK(((unsigned int)&tmp.pNext - (unsigned int)&tmp) == 0);
		CHECK(((unsigned int)&tmp.pPrev - (unsigned int)&tmp) == 4);
		CHECK(((unsigned int)&tmp.key - (unsigned int)&tmp) == 8);
		CHECK(((unsigned int)&tmp.pRedirect - (unsigned int)&tmp) == 40);
	}

	//-----------------------------------------------------------------------------
	// It initializes the data if a very bloated way do not modify it!
	//-----------------------------------------------------------------------------

	Bloated *pBloated = new Bloated(1000);
	CHECK(pBloated != nullptr);

	// -----------------------------------------------------------------------
	//  This is your new function
	// -----------------------------------------------------------------------
	//          Use this API signature to convert the bloated list to hot/cold
	//          You cannot reference the original data, you need to copy 
	//          and convert Original data into your new layout
	// -----------------------------------------------------------------------
	pHotCold = new JediHotCold( pBloated );
	CHECK(pHotCold != nullptr);

	// class check
	TestJediHotCold *p = (TestJediHotCold *)pHotCold;
	CHECK(((unsigned int)&p->pHotHead - (unsigned int)pHotCold) == 0);
	CHECK(((unsigned int)&p->pRedirectHead - (unsigned int)pHotCold) == 4);
	CHECK(((unsigned int)&p->pColdHead - (unsigned int)pHotCold) == 8);

	//-----------------------------------------------------------------------------
	// Make sure you haven't reference the data
	//-----------------------------------------------------------------------------
	delete pBloated;
	pBloated = nullptr;

	//-----------------------------------------------------------------------------
	// Find a specific Keys
	//-----------------------------------------------------------------------------

	JediHotNode  *pFoundHotNode;
	JediColdNode *pFoundColdNode;
	bool foundFlag;

	//-------------------------------------------------------------------
	// Find Key
	//-------------------------------------------------------------------
	foundFlag = pHotCold->FindKey(0x1f825b7b, pFoundColdNode, pFoundHotNode);
	CHECK(foundFlag == true);

	CHECK_EQUAL(((unsigned int)&pFoundColdNode->key - (unsigned int)pFoundColdNode), 0);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->aa - (unsigned int)pFoundColdNode), 4);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->x - (unsigned int)pFoundColdNode), 8);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->A - (unsigned int)pFoundColdNode), 24);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->y - (unsigned int)pFoundColdNode), 12);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->B - (unsigned int)pFoundColdNode), 36);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->C - (unsigned int)pFoundColdNode), 48);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->z - (unsigned int)pFoundColdNode), 16);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->D - (unsigned int)pFoundColdNode), 60);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->MA - (unsigned int)pFoundColdNode), 72);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->bb - (unsigned int)pFoundColdNode), 5);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->MB - (unsigned int)pFoundColdNode), 136);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->w - (unsigned int)pFoundColdNode), 20);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->MC - (unsigned int)pFoundColdNode), 200);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->MD - (unsigned int)pFoundColdNode), 264);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->cc - (unsigned int)pFoundColdNode), 6);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->name - (unsigned int)pFoundColdNode), 392);

	CHECK_EQUAL(((unsigned int)&pFoundHotNode->pNext - (unsigned int)pFoundHotNode), 0);
	CHECK_EQUAL(((unsigned int)&pFoundHotNode->pPrev - (unsigned int)pFoundHotNode), 4);
	CHECK_EQUAL(((unsigned int)&pFoundHotNode->key   - (unsigned int)pFoundHotNode), 8);
	CHECK_EQUAL(((unsigned int)&pFoundHotNode->pRedirect - (unsigned int)pFoundHotNode), 40);

	CHECK((0xFF & (*pFoundColdNode).aa) == 0x99);
	CHECK((0xFF & (*pFoundColdNode).bb) == 0xf);
	CHECK((0xFF & (*pFoundColdNode).cc) == 0x51);
	CHECK((0xFF & (*pFoundColdNode).dd) == 0xec);
	CHECK((*pFoundColdNode).x == 18559.501953f);
	CHECK((*pFoundColdNode).y == 25171.566406f);
	CHECK((*pFoundColdNode).z == 14454.319336f);
	CHECK((*pFoundColdNode).w == 24405.060547f);
	CHECK((*pFoundColdNode).A.x == 17022.880859f);
	CHECK((*pFoundColdNode).A.y == 6968.578613f);
	CHECK((*pFoundColdNode).A.z == 2310.306152f);
	CHECK((*pFoundColdNode).B.x == 17159.417969f);
	CHECK((*pFoundColdNode).B.y == 20881.152344f);
	CHECK((*pFoundColdNode).B.z == 31106.437500f);
	CHECK((*pFoundColdNode).C.x == 3853.794678f);
	CHECK((*pFoundColdNode).C.y == 21526.755859f);
	CHECK((*pFoundColdNode).C.z == 26208.945313f);
	CHECK((*pFoundColdNode).D.x == 9229.658203f);
	CHECK((*pFoundColdNode).D.y == 24901.083984f);
	CHECK((*pFoundColdNode).D.z == 24579.748047f);
	CHECK((*pFoundColdNode).MA.m00 == 17238.095703f);
	CHECK((*pFoundColdNode).MA.m01 == 16793.882813f);
	CHECK((*pFoundColdNode).MA.m02 == 13673.873047f);
	CHECK((*pFoundColdNode).MA.m03 == 27501.900391f);
	CHECK((*pFoundColdNode).MA.m10 == 15136.188477f);
	CHECK((*pFoundColdNode).MA.m11 == 11081.698242f);
	CHECK((*pFoundColdNode).MA.m12 == 9916.604492f);
	CHECK((*pFoundColdNode).MA.m13 == 11418.675781f);
	CHECK((*pFoundColdNode).MA.m20 == 32562.707031f);
	CHECK((*pFoundColdNode).MA.m21 == 12068.075195f);
	CHECK((*pFoundColdNode).MA.m22 == 3201.439209f);
	CHECK((*pFoundColdNode).MA.m23 == 5621.257813f);
	CHECK((*pFoundColdNode).MA.m30 == 32322.826172f);
	CHECK((*pFoundColdNode).MA.m31 == 25239.439453f);
	CHECK((*pFoundColdNode).MA.m32 == 24705.855469f);
	CHECK((*pFoundColdNode).MA.m33 == 28810.923828f);
	CHECK((*pFoundColdNode).MB.m00 == 21195.820313f);
	CHECK((*pFoundColdNode).MB.m01 == 1265.356445f);
	CHECK((*pFoundColdNode).MB.m02 == 13704.870117f);
	CHECK((*pFoundColdNode).MB.m03 == 1676.044922f);
	CHECK((*pFoundColdNode).MB.m10 == 16780.097656f);
	CHECK((*pFoundColdNode).MB.m11 == 29158.853516f);
	CHECK((*pFoundColdNode).MB.m12 == 15848.885742f);
	CHECK((*pFoundColdNode).MB.m13 == 24016.724609f);
	CHECK((*pFoundColdNode).MB.m20 == 18438.859375f);
	CHECK((*pFoundColdNode).MB.m21 == 9229.357422f);
	CHECK((*pFoundColdNode).MB.m22 == 25077.164063f);
	CHECK((*pFoundColdNode).MB.m23 == 591.047119f);
	CHECK((*pFoundColdNode).MB.m30 == 15105.391602f);
	CHECK((*pFoundColdNode).MB.m31 == 18275.263672f);
	CHECK((*pFoundColdNode).MB.m32 == 26247.923828f);
	CHECK((*pFoundColdNode).MB.m33 == 24744.953125f);
	CHECK((*pFoundColdNode).MC.m00 == 29959.964844f);
	CHECK((*pFoundColdNode).MC.m01 == 23493.125000f);
	CHECK((*pFoundColdNode).MC.m02 == 9083.061523f);
	CHECK((*pFoundColdNode).MC.m03 == 12443.748047f);
	CHECK((*pFoundColdNode).MC.m10 == 5351.375488f);
	CHECK((*pFoundColdNode).MC.m11 == 26489.472656f);
	CHECK((*pFoundColdNode).MC.m12 == 18994.501953f);
	CHECK((*pFoundColdNode).MC.m13 == 28559.232422f);
	CHECK((*pFoundColdNode).MC.m20 == 19508.107422f);
	CHECK((*pFoundColdNode).MC.m21 == 14758.250000f);
	CHECK((*pFoundColdNode).MC.m22 == 15376.171875f);
	CHECK((*pFoundColdNode).MC.m23 == 27406.453125f);
	CHECK((*pFoundColdNode).MC.m30 == 15812.115234f);
	CHECK((*pFoundColdNode).MC.m31 == 15575.886719f);
	CHECK((*pFoundColdNode).MC.m32 == 28926.591797f);
	CHECK((*pFoundColdNode).MC.m33 == 23364.082031f);
	CHECK((*pFoundColdNode).MD.m00 == 27698.230469f);
	CHECK((*pFoundColdNode).MD.m01 == 22908.984375f);
	CHECK((*pFoundColdNode).MD.m02 == 28137.101563f);
	CHECK((*pFoundColdNode).MD.m03 == 3459.417969f);
	CHECK((*pFoundColdNode).MD.m10 == 14428.201172f);
	CHECK((*pFoundColdNode).MD.m11 == 26729.640625f);
	CHECK((*pFoundColdNode).MD.m12 == 19265.712891f);
	CHECK((*pFoundColdNode).MD.m13 == 7873.021973f);
	CHECK((*pFoundColdNode).MD.m20 == 28645.353516f);
	CHECK((*pFoundColdNode).MD.m21 == 13653.376953f);
	CHECK((*pFoundColdNode).MD.m22 == 19323.574219f);
	CHECK((*pFoundColdNode).MD.m23 == 17944.964844f);
	CHECK((*pFoundColdNode).MD.m30 == 27571.875000f);
	CHECK((*pFoundColdNode).MD.m31 == 4444.720703f);
	CHECK((*pFoundColdNode).MD.m32 == 399.071655f);
	CHECK((*pFoundColdNode).MD.m33 == 12101.711914f);
	CHECK((*pFoundColdNode).ME.m00 == 15987.721680f);
	CHECK((*pFoundColdNode).ME.m01 == 30078.386719f);
	CHECK((*pFoundColdNode).ME.m02 == 1915.555176f);
	CHECK((*pFoundColdNode).ME.m03 == 25898.619141f);
	CHECK((*pFoundColdNode).ME.m10 == 29456.156250f);
	CHECK((*pFoundColdNode).ME.m11 == 13598.095703f);
	CHECK((*pFoundColdNode).ME.m12 == 17598.679688f);
	CHECK((*pFoundColdNode).ME.m13 == 19533.070313f);
	CHECK((*pFoundColdNode).ME.m20 == 23360.908203f);
	CHECK((*pFoundColdNode).ME.m21 == 16515.017578f);
	CHECK((*pFoundColdNode).ME.m22 == 17629.382813f);
	CHECK((*pFoundColdNode).ME.m23 == 11607.223633f);
	CHECK((*pFoundColdNode).ME.m30 == 28152.958984f);
	CHECK((*pFoundColdNode).ME.m31 == 30555.833984f);
	CHECK((*pFoundColdNode).ME.m32 == 7650.481445f);
	CHECK((*pFoundColdNode).ME.m33 == 20373.398438f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x00] == (unsigned char)0x29);
	CHECK((unsigned char)(*pFoundColdNode).name[0x01] == (unsigned char)0x4b);
	CHECK((unsigned char)(*pFoundColdNode).name[0x02] == (unsigned char)0x3f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x03] == (unsigned char)0x3d);
	CHECK((unsigned char)(*pFoundColdNode).name[0x04] == (unsigned char)0x40);
	CHECK((unsigned char)(*pFoundColdNode).name[0x05] == (unsigned char)0x6a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x06] == (unsigned char)0x9e);
	CHECK((unsigned char)(*pFoundColdNode).name[0x07] == (unsigned char)0x4a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x08] == (unsigned char)0x7f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x09] == (unsigned char)0x32);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0a] == (unsigned char)0x73);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0b] == (unsigned char)0x71);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0c] == (unsigned char)0x8f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0d] == (unsigned char)0x25);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0e] == (unsigned char)0x99);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0f] == (unsigned char)0xc6);
	CHECK((unsigned char)(*pFoundColdNode).name[0x10] == (unsigned char)0xe9);
	CHECK((unsigned char)(*pFoundColdNode).name[0x11] == (unsigned char)0xee);
	CHECK((unsigned char)(*pFoundColdNode).name[0x12] == (unsigned char)0x03);
	CHECK((unsigned char)(*pFoundColdNode).name[0x13] == (unsigned char)0xcd);
	CHECK((unsigned char)(*pFoundColdNode).name[0x14] == (unsigned char)0x41);
	CHECK((unsigned char)(*pFoundColdNode).name[0x15] == (unsigned char)0x7c);
	CHECK((unsigned char)(*pFoundColdNode).name[0x16] == (unsigned char)0x11);
	CHECK((unsigned char)(*pFoundColdNode).name[0x17] == (unsigned char)0xaf);
	CHECK((unsigned char)(*pFoundColdNode).name[0x18] == (unsigned char)0xea);
	CHECK((unsigned char)(*pFoundColdNode).name[0x19] == (unsigned char)0x18);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1a] == (unsigned char)0x40);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1b] == (unsigned char)0x93);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1c] == (unsigned char)0xee);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1d] == (unsigned char)0x8a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1e] == (unsigned char)0x6f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1f] == (unsigned char)0x0c);
	CHECK((unsigned char)(*pFoundColdNode).name[0x20] == (unsigned char)0x3a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x21] == (unsigned char)0xc1);
	CHECK((unsigned char)(*pFoundColdNode).name[0x22] == (unsigned char)0x5e);
	CHECK((unsigned char)(*pFoundColdNode).name[0x23] == (unsigned char)0xf2);
	CHECK((unsigned char)(*pFoundColdNode).name[0x24] == (unsigned char)0xaf);
	CHECK((unsigned char)(*pFoundColdNode).name[0x25] == (unsigned char)0x02);
	CHECK((unsigned char)(*pFoundColdNode).name[0x26] == (unsigned char)0xb3);
	CHECK((unsigned char)(*pFoundColdNode).name[0x27] == (unsigned char)0x28);
	CHECK((unsigned char)(*pFoundColdNode).name[0x28] == (unsigned char)0xfb);
	CHECK((unsigned char)(*pFoundColdNode).name[0x29] == (unsigned char)0x3a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2a] == (unsigned char)0x9f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2b] == (unsigned char)0xf6);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2c] == (unsigned char)0xe4);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2d] == (unsigned char)0xd0);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2e] == (unsigned char)0x6e);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2f] == (unsigned char)0x32);
	CHECK((unsigned char)(*pFoundColdNode).name[0x30] == (unsigned char)0x15);
	CHECK((unsigned char)(*pFoundColdNode).name[0x31] == (unsigned char)0xa8);
	CHECK((unsigned char)(*pFoundColdNode).name[0x32] == (unsigned char)0x1d);
	CHECK((unsigned char)(*pFoundColdNode).name[0x33] == (unsigned char)0xbb);
	CHECK((unsigned char)(*pFoundColdNode).name[0x34] == (unsigned char)0x86);
	CHECK((unsigned char)(*pFoundColdNode).name[0x35] == (unsigned char)0x25);
	CHECK((unsigned char)(*pFoundColdNode).name[0x36] == (unsigned char)0x4d);
	CHECK((unsigned char)(*pFoundColdNode).name[0x37] == (unsigned char)0x0e);
	CHECK((unsigned char)(*pFoundColdNode).name[0x38] == (unsigned char)0x87);
	CHECK((unsigned char)(*pFoundColdNode).name[0x39] == (unsigned char)0xe9);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3a] == (unsigned char)0x99);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3b] == (unsigned char)0xf4);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3c] == (unsigned char)0x90);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3d] == (unsigned char)0xaf);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3e] == (unsigned char)0x35);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3f] == (unsigned char)0x8e);
	CHECK((unsigned char)(*pFoundColdNode).name[0x40] == (unsigned char)0x5f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x41] == (unsigned char)0xc8);
	CHECK((unsigned char)(*pFoundColdNode).name[0x42] == (unsigned char)0x5c);
	CHECK((unsigned char)(*pFoundColdNode).name[0x43] == (unsigned char)0xca);
	CHECK((unsigned char)(*pFoundColdNode).name[0x44] == (unsigned char)0xfb);
	CHECK((unsigned char)(*pFoundColdNode).name[0x45] == (unsigned char)0xcb);
	CHECK((unsigned char)(*pFoundColdNode).name[0x46] == (unsigned char)0xe9);
	CHECK((unsigned char)(*pFoundColdNode).name[0x47] == (unsigned char)0x73);
	CHECK((unsigned char)(*pFoundColdNode).name[0x48] == (unsigned char)0xb5);
	CHECK((unsigned char)(*pFoundColdNode).name[0x49] == (unsigned char)0xff);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4a] == (unsigned char)0x2e);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4b] == (unsigned char)0xff);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4c] == (unsigned char)0xba);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4d] == (unsigned char)0xe3);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4e] == (unsigned char)0x4e);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4f] == (unsigned char)0xb7);
	CHECK((unsigned char)(*pFoundColdNode).name[0x50] == (unsigned char)0x3b);
	CHECK((unsigned char)(*pFoundColdNode).name[0x51] == (unsigned char)0x8f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x52] == (unsigned char)0x53);
	CHECK((unsigned char)(*pFoundColdNode).name[0x53] == (unsigned char)0xe9);
	CHECK((unsigned char)(*pFoundColdNode).name[0x54] == (unsigned char)0xda);
	CHECK((unsigned char)(*pFoundColdNode).name[0x55] == (unsigned char)0xb0);
	CHECK((unsigned char)(*pFoundColdNode).name[0x56] == (unsigned char)0xa7);
	CHECK((unsigned char)(*pFoundColdNode).name[0x57] == (unsigned char)0xb5);
	CHECK((unsigned char)(*pFoundColdNode).name[0x58] == (unsigned char)0x56);
	CHECK((unsigned char)(*pFoundColdNode).name[0x59] == (unsigned char)0x64);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5a] == (unsigned char)0xa3);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5b] == (unsigned char)0xb9);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5c] == (unsigned char)0x22);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5d] == (unsigned char)0x44);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5e] == (unsigned char)0x7d);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5f] == (unsigned char)0x15);
	CHECK((unsigned char)(*pFoundColdNode).name[0x60] == (unsigned char)0xd6);
	CHECK((unsigned char)(*pFoundColdNode).name[0x61] == (unsigned char)0xc7);
	CHECK((unsigned char)(*pFoundColdNode).name[0x62] == (unsigned char)0xa9);
	CHECK((unsigned char)(*pFoundColdNode).name[0x63] == (unsigned char)0x95);
	CHECK((unsigned char)(*pFoundColdNode).name[0x64] == (unsigned char)0x4c);
	CHECK((unsigned char)(*pFoundColdNode).name[0x65] == (unsigned char)0x68);
	CHECK((unsigned char)(*pFoundColdNode).name[0x66] == (unsigned char)0x83);
	CHECK((unsigned char)(*pFoundColdNode).name[0x67] == (unsigned char)0x0b);
	CHECK((unsigned char)(*pFoundColdNode).name[0x68] == (unsigned char)0xac);
	CHECK((unsigned char)(*pFoundColdNode).name[0x69] == (unsigned char)0x26);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6a] == (unsigned char)0xd6);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6b] == (unsigned char)0x01);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6c] == (unsigned char)0x4d);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6d] == (unsigned char)0xcb);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6e] == (unsigned char)0x92);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6f] == (unsigned char)0x6e);
	CHECK((unsigned char)(*pFoundColdNode).name[0x70] == (unsigned char)0xbc);
	CHECK((unsigned char)(*pFoundColdNode).name[0x71] == (unsigned char)0xa4);
	CHECK((unsigned char)(*pFoundColdNode).name[0x72] == (unsigned char)0xc5);
	CHECK((unsigned char)(*pFoundColdNode).name[0x73] == (unsigned char)0x92);
	CHECK((unsigned char)(*pFoundColdNode).name[0x74] == (unsigned char)0xaa);
	CHECK((unsigned char)(*pFoundColdNode).name[0x75] == (unsigned char)0x7a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x76] == (unsigned char)0xb1);
	CHECK((unsigned char)(*pFoundColdNode).name[0x77] == (unsigned char)0x12);
	CHECK((unsigned char)(*pFoundColdNode).name[0x78] == (unsigned char)0xbc);
	CHECK((unsigned char)(*pFoundColdNode).name[0x79] == (unsigned char)0x84);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7a] == (unsigned char)0x8a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7b] == (unsigned char)0x81);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7c] == (unsigned char)0xdd);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7d] == (unsigned char)0x2f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7e] == (unsigned char)0x34);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7f] == (unsigned char)0x00);

	CHECK(pFoundColdNode->key == 0x1f825b7b);

	//-------------------------------------------------------------------
	// Find Key
	//-------------------------------------------------------------------
	foundFlag = pHotCold->FindKey(0x5afd40d8, pFoundColdNode, pFoundHotNode);
	CHECK(foundFlag == true);

	CHECK_EQUAL(((unsigned int)&pFoundColdNode->key - (unsigned int)pFoundColdNode), 0);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->aa - (unsigned int)pFoundColdNode), 4);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->x - (unsigned int)pFoundColdNode), 8);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->A - (unsigned int)pFoundColdNode), 24);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->y - (unsigned int)pFoundColdNode), 12);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->B - (unsigned int)pFoundColdNode), 36);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->C - (unsigned int)pFoundColdNode), 48);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->z - (unsigned int)pFoundColdNode), 16);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->D - (unsigned int)pFoundColdNode), 60);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->MA - (unsigned int)pFoundColdNode), 72);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->bb - (unsigned int)pFoundColdNode), 5);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->MB - (unsigned int)pFoundColdNode), 136);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->w - (unsigned int)pFoundColdNode), 20);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->MC - (unsigned int)pFoundColdNode), 200);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->MD - (unsigned int)pFoundColdNode), 264);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->cc - (unsigned int)pFoundColdNode), 6);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->name - (unsigned int)pFoundColdNode), 392);

	CHECK_EQUAL(((unsigned int)&pFoundHotNode->pNext - (unsigned int)pFoundHotNode), 0);
	CHECK_EQUAL(((unsigned int)&pFoundHotNode->pPrev - (unsigned int)pFoundHotNode), 4);
	CHECK_EQUAL(((unsigned int)&pFoundHotNode->key - (unsigned int)pFoundHotNode), 8);
	CHECK_EQUAL(((unsigned int)&pFoundHotNode->pRedirect - (unsigned int)pFoundHotNode), 40);

	CHECK((0xFF & (*pFoundColdNode).aa) == 0xef);
	CHECK((0xFF & (*pFoundColdNode).bb) == 0x25);
	CHECK((0xFF & (*pFoundColdNode).cc) == 0x3b);
	CHECK((0xFF & (*pFoundColdNode).dd) == 0xb2);
	CHECK((*pFoundColdNode).x == 27516.009766f);
	CHECK((*pFoundColdNode).y == 9878.626953f);
	CHECK((*pFoundColdNode).z == 23877.667969f);
	CHECK((*pFoundColdNode).w == 5814.986328f);
	CHECK((*pFoundColdNode).A.x == 2985.061035f);
	CHECK((*pFoundColdNode).A.y == 5320.730957f);
	CHECK((*pFoundColdNode).A.z == 6258.465820f);
	CHECK((*pFoundColdNode).B.x == 23577.089844f);
	CHECK((*pFoundColdNode).B.y == 32106.605469f);
	CHECK((*pFoundColdNode).B.z == 14803.447266f);
	CHECK((*pFoundColdNode).C.x == 7976.830078f);
	CHECK((*pFoundColdNode).C.y == 22129.238281f);
	CHECK((*pFoundColdNode).C.z == 553.503479f);
	CHECK((*pFoundColdNode).D.x == 13174.630859f);
	CHECK((*pFoundColdNode).D.y == 22051.357422f);
	CHECK((*pFoundColdNode).D.z == 12639.016602f);
	CHECK((*pFoundColdNode).MA.m00 == 19349.111328f);
	CHECK((*pFoundColdNode).MA.m01 == 12758.828125f);
	CHECK((*pFoundColdNode).MA.m02 == 26531.138672f);
	CHECK((*pFoundColdNode).MA.m03 == 10792.731445f);
	CHECK((*pFoundColdNode).MA.m10 == 18977.439453f);
	CHECK((*pFoundColdNode).MA.m11 == 14841.722656f);
	CHECK((*pFoundColdNode).MA.m12 == 6638.734863f);
	CHECK((*pFoundColdNode).MA.m13 == 6711.148926f);
	CHECK((*pFoundColdNode).MA.m20 == 2947.933838f);
	CHECK((*pFoundColdNode).MA.m21 == 30796.199219f);
	CHECK((*pFoundColdNode).MA.m22 == 13771.771484f);
	CHECK((*pFoundColdNode).MA.m23 == 4504.881348f);
	CHECK((*pFoundColdNode).MA.m30 == 10550.892578f);
	CHECK((*pFoundColdNode).MA.m31 == 8990.035156f);
	CHECK((*pFoundColdNode).MA.m32 == 32009.164063f);
	CHECK((*pFoundColdNode).MA.m33 == 381.388794f);
	CHECK((*pFoundColdNode).MB.m00 == 18168.498047f);
	CHECK((*pFoundColdNode).MB.m01 == 27939.216797f);
	CHECK((*pFoundColdNode).MB.m02 == 12534.963867f);
	CHECK((*pFoundColdNode).MB.m03 == 30397.609375f);
	CHECK((*pFoundColdNode).MB.m10 == 8524.475586f);
	CHECK((*pFoundColdNode).MB.m11 == 2033.885864f);
	CHECK((*pFoundColdNode).MB.m12 == 10472.830078f);
	CHECK((*pFoundColdNode).MB.m13 == 25680.208984f);
	CHECK((*pFoundColdNode).MB.m20 == 11256.380859f);
	CHECK((*pFoundColdNode).MB.m21 == 13958.895508f);
	CHECK((*pFoundColdNode).MB.m22 == 30904.130859f);
	CHECK((*pFoundColdNode).MB.m23 == 32212.470703f);
	CHECK((*pFoundColdNode).MB.m30 == 16520.511719f);
	CHECK((*pFoundColdNode).MB.m31 == 28609.011719f);
	CHECK((*pFoundColdNode).MB.m32 == 10050.661133f);
	CHECK((*pFoundColdNode).MB.m33 == 8716.783203f);
	CHECK((*pFoundColdNode).MC.m00 == 23754.437500f);
	CHECK((*pFoundColdNode).MC.m01 == 4324.723145f);
	CHECK((*pFoundColdNode).MC.m02 == 29927.994141f);
	CHECK((*pFoundColdNode).MC.m03 == 21851.783203f);
	CHECK((*pFoundColdNode).MC.m10 == 29009.164063f);
	CHECK((*pFoundColdNode).MC.m11 == 8217.687500f);
	CHECK((*pFoundColdNode).MC.m12 == 12811.455078f);
	CHECK((*pFoundColdNode).MC.m13 == 19533.103516f);
	CHECK((*pFoundColdNode).MC.m20 == 16370.919922f);
	CHECK((*pFoundColdNode).MC.m21 == 7914.793457f);
	CHECK((*pFoundColdNode).MC.m22 == 9623.710938f);
	CHECK((*pFoundColdNode).MC.m23 == 1551.749512f);
	CHECK((*pFoundColdNode).MC.m30 == 19018.560547f);
	CHECK((*pFoundColdNode).MC.m31 == 27846.855469f);
	CHECK((*pFoundColdNode).MC.m32 == 887.003540f);
	CHECK((*pFoundColdNode).MC.m33 == 30450.109375f);
	CHECK((*pFoundColdNode).MD.m00 == 20534.607422f);
	CHECK((*pFoundColdNode).MD.m01 == 14723.928711f);
	CHECK((*pFoundColdNode).MD.m02 == 29469.990234f);
	CHECK((*pFoundColdNode).MD.m03 == 17132.580078f);
	CHECK((*pFoundColdNode).MD.m10 == 24152.910156f);
	CHECK((*pFoundColdNode).MD.m11 == 2007.250244f);
	CHECK((*pFoundColdNode).MD.m12 == 9724.218750f);
	CHECK((*pFoundColdNode).MD.m13 == 2071.815918f);
	CHECK((*pFoundColdNode).MD.m20 == 27801.929688f);
	CHECK((*pFoundColdNode).MD.m21 == 16350.804688f);
	CHECK((*pFoundColdNode).MD.m22 == 32271.224609f);
	CHECK((*pFoundColdNode).MD.m23 == 14640.619141f);
	CHECK((*pFoundColdNode).MD.m30 == 3234.643555f);
	CHECK((*pFoundColdNode).MD.m31 == 20887.519531f);
	CHECK((*pFoundColdNode).MD.m32 == 17488.255859f);
	CHECK((*pFoundColdNode).MD.m33 == 2073.431885f);
	CHECK((*pFoundColdNode).ME.m00 == 10337.089844f);
	CHECK((*pFoundColdNode).ME.m01 == 26471.076172f);
	CHECK((*pFoundColdNode).ME.m02 == 28481.613281f);
	CHECK((*pFoundColdNode).ME.m03 == 24663.474609f);
	CHECK((*pFoundColdNode).ME.m10 == 20619.521484f);
	CHECK((*pFoundColdNode).ME.m11 == 10388.354492f);
	CHECK((*pFoundColdNode).ME.m12 == 31078.636719f);
	CHECK((*pFoundColdNode).ME.m13 == 29076.490234f);
	CHECK((*pFoundColdNode).ME.m20 == 6932.194824f);
	CHECK((*pFoundColdNode).ME.m21 == 3019.499023f);
	CHECK((*pFoundColdNode).ME.m22 == 18376.289063f);
	CHECK((*pFoundColdNode).ME.m23 == 18975.134766f);
	CHECK((*pFoundColdNode).ME.m30 == 4536.773926f);
	CHECK((*pFoundColdNode).ME.m31 == 14747.610352f);
	CHECK((*pFoundColdNode).ME.m32 == 8308.384766f);
	CHECK((*pFoundColdNode).ME.m33 == 359.971222f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x00] == (unsigned char)0xa7);
	CHECK((unsigned char)(*pFoundColdNode).name[0x01] == (unsigned char)0x05);
	CHECK((unsigned char)(*pFoundColdNode).name[0x02] == (unsigned char)0x78);
	CHECK((unsigned char)(*pFoundColdNode).name[0x03] == (unsigned char)0xc9);
	CHECK((unsigned char)(*pFoundColdNode).name[0x04] == (unsigned char)0x2c);
	CHECK((unsigned char)(*pFoundColdNode).name[0x05] == (unsigned char)0x3b);
	CHECK((unsigned char)(*pFoundColdNode).name[0x06] == (unsigned char)0xf7);
	CHECK((unsigned char)(*pFoundColdNode).name[0x07] == (unsigned char)0x2f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x08] == (unsigned char)0x85);
	CHECK((unsigned char)(*pFoundColdNode).name[0x09] == (unsigned char)0x7f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0a] == (unsigned char)0x0a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0b] == (unsigned char)0xef);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0c] == (unsigned char)0x15);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0d] == (unsigned char)0x33);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0e] == (unsigned char)0xb5);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0f] == (unsigned char)0xc4);
	CHECK((unsigned char)(*pFoundColdNode).name[0x10] == (unsigned char)0x06);
	CHECK((unsigned char)(*pFoundColdNode).name[0x11] == (unsigned char)0xa3);
	CHECK((unsigned char)(*pFoundColdNode).name[0x12] == (unsigned char)0x74);
	CHECK((unsigned char)(*pFoundColdNode).name[0x13] == (unsigned char)0xde);
	CHECK((unsigned char)(*pFoundColdNode).name[0x14] == (unsigned char)0xb8);
	CHECK((unsigned char)(*pFoundColdNode).name[0x15] == (unsigned char)0x05);
	CHECK((unsigned char)(*pFoundColdNode).name[0x16] == (unsigned char)0xd4);
	CHECK((unsigned char)(*pFoundColdNode).name[0x17] == (unsigned char)0xbd);
	CHECK((unsigned char)(*pFoundColdNode).name[0x18] == (unsigned char)0xdd);
	CHECK((unsigned char)(*pFoundColdNode).name[0x19] == (unsigned char)0x85);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1a] == (unsigned char)0x5f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1b] == (unsigned char)0x63);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1c] == (unsigned char)0xdf);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1d] == (unsigned char)0x54);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1e] == (unsigned char)0xf9);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1f] == (unsigned char)0x74);
	CHECK((unsigned char)(*pFoundColdNode).name[0x20] == (unsigned char)0x14);
	CHECK((unsigned char)(*pFoundColdNode).name[0x21] == (unsigned char)0x5a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x22] == (unsigned char)0xe7);
	CHECK((unsigned char)(*pFoundColdNode).name[0x23] == (unsigned char)0x03);
	CHECK((unsigned char)(*pFoundColdNode).name[0x24] == (unsigned char)0xf5);
	CHECK((unsigned char)(*pFoundColdNode).name[0x25] == (unsigned char)0x65);
	CHECK((unsigned char)(*pFoundColdNode).name[0x26] == (unsigned char)0xbe);
	CHECK((unsigned char)(*pFoundColdNode).name[0x27] == (unsigned char)0xff);
	CHECK((unsigned char)(*pFoundColdNode).name[0x28] == (unsigned char)0x49);
	CHECK((unsigned char)(*pFoundColdNode).name[0x29] == (unsigned char)0x0a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2a] == (unsigned char)0xdb);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2b] == (unsigned char)0x33);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2c] == (unsigned char)0x65);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2d] == (unsigned char)0x93);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2e] == (unsigned char)0xb6);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2f] == (unsigned char)0x11);
	CHECK((unsigned char)(*pFoundColdNode).name[0x30] == (unsigned char)0x9f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x31] == (unsigned char)0x95);
	CHECK((unsigned char)(*pFoundColdNode).name[0x32] == (unsigned char)0x94);
	CHECK((unsigned char)(*pFoundColdNode).name[0x33] == (unsigned char)0xe4);
	CHECK((unsigned char)(*pFoundColdNode).name[0x34] == (unsigned char)0xfa);
	CHECK((unsigned char)(*pFoundColdNode).name[0x35] == (unsigned char)0x28);
	CHECK((unsigned char)(*pFoundColdNode).name[0x36] == (unsigned char)0x0d);
	CHECK((unsigned char)(*pFoundColdNode).name[0x37] == (unsigned char)0x24);
	CHECK((unsigned char)(*pFoundColdNode).name[0x38] == (unsigned char)0x23);
	CHECK((unsigned char)(*pFoundColdNode).name[0x39] == (unsigned char)0xc9);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3a] == (unsigned char)0x52);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3b] == (unsigned char)0xd9);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3c] == (unsigned char)0x59);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3d] == (unsigned char)0xee);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3e] == (unsigned char)0x2e);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3f] == (unsigned char)0x05);
	CHECK((unsigned char)(*pFoundColdNode).name[0x40] == (unsigned char)0x4a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x41] == (unsigned char)0x45);
	CHECK((unsigned char)(*pFoundColdNode).name[0x42] == (unsigned char)0x33);
	CHECK((unsigned char)(*pFoundColdNode).name[0x43] == (unsigned char)0xd0);
	CHECK((unsigned char)(*pFoundColdNode).name[0x44] == (unsigned char)0x06);
	CHECK((unsigned char)(*pFoundColdNode).name[0x45] == (unsigned char)0xa5);
	CHECK((unsigned char)(*pFoundColdNode).name[0x46] == (unsigned char)0x02);
	CHECK((unsigned char)(*pFoundColdNode).name[0x47] == (unsigned char)0x98);
	CHECK((unsigned char)(*pFoundColdNode).name[0x48] == (unsigned char)0x06);
	CHECK((unsigned char)(*pFoundColdNode).name[0x49] == (unsigned char)0xca);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4a] == (unsigned char)0x33);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4b] == (unsigned char)0xf9);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4c] == (unsigned char)0x7b);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4d] == (unsigned char)0x37);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4e] == (unsigned char)0xb6);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4f] == (unsigned char)0x83);
	CHECK((unsigned char)(*pFoundColdNode).name[0x50] == (unsigned char)0x5b);
	CHECK((unsigned char)(*pFoundColdNode).name[0x51] == (unsigned char)0xe8);
	CHECK((unsigned char)(*pFoundColdNode).name[0x52] == (unsigned char)0xc0);
	CHECK((unsigned char)(*pFoundColdNode).name[0x53] == (unsigned char)0x40);
	CHECK((unsigned char)(*pFoundColdNode).name[0x54] == (unsigned char)0x50);
	CHECK((unsigned char)(*pFoundColdNode).name[0x55] == (unsigned char)0x4a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x56] == (unsigned char)0x1a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x57] == (unsigned char)0x9a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x58] == (unsigned char)0x17);
	CHECK((unsigned char)(*pFoundColdNode).name[0x59] == (unsigned char)0xed);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5a] == (unsigned char)0x5d);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5b] == (unsigned char)0xe7);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5c] == (unsigned char)0x6e);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5d] == (unsigned char)0x9a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5e] == (unsigned char)0x85);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5f] == (unsigned char)0x1d);
	CHECK((unsigned char)(*pFoundColdNode).name[0x60] == (unsigned char)0x0c);
	CHECK((unsigned char)(*pFoundColdNode).name[0x61] == (unsigned char)0x28);
	CHECK((unsigned char)(*pFoundColdNode).name[0x62] == (unsigned char)0xd1);
	CHECK((unsigned char)(*pFoundColdNode).name[0x63] == (unsigned char)0x6b);
	CHECK((unsigned char)(*pFoundColdNode).name[0x64] == (unsigned char)0x58);
	CHECK((unsigned char)(*pFoundColdNode).name[0x65] == (unsigned char)0xa9);
	CHECK((unsigned char)(*pFoundColdNode).name[0x66] == (unsigned char)0xda);
	CHECK((unsigned char)(*pFoundColdNode).name[0x67] == (unsigned char)0x4b);
	CHECK((unsigned char)(*pFoundColdNode).name[0x68] == (unsigned char)0x5a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x69] == (unsigned char)0xff);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6a] == (unsigned char)0xef);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6b] == (unsigned char)0x3f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6c] == (unsigned char)0x03);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6d] == (unsigned char)0xb7);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6e] == (unsigned char)0x07);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6f] == (unsigned char)0x46);
	CHECK((unsigned char)(*pFoundColdNode).name[0x70] == (unsigned char)0xd9);
	CHECK((unsigned char)(*pFoundColdNode).name[0x71] == (unsigned char)0x5a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x72] == (unsigned char)0x61);
	CHECK((unsigned char)(*pFoundColdNode).name[0x73] == (unsigned char)0x54);
	CHECK((unsigned char)(*pFoundColdNode).name[0x74] == (unsigned char)0xb7);
	CHECK((unsigned char)(*pFoundColdNode).name[0x75] == (unsigned char)0x91);
	CHECK((unsigned char)(*pFoundColdNode).name[0x76] == (unsigned char)0x26);
	CHECK((unsigned char)(*pFoundColdNode).name[0x77] == (unsigned char)0xbd);
	CHECK((unsigned char)(*pFoundColdNode).name[0x78] == (unsigned char)0xfd);
	CHECK((unsigned char)(*pFoundColdNode).name[0x79] == (unsigned char)0xc9);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7a] == (unsigned char)0x14);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7b] == (unsigned char)0xf1);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7c] == (unsigned char)0x8c);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7d] == (unsigned char)0x2c);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7e] == (unsigned char)0xa5);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7f] == (unsigned char)0x00);

	CHECK(pFoundColdNode->key == 0x5afd40d8);

	//-------------------------------------------------------------------
	// Find Key
	//-------------------------------------------------------------------
	foundFlag = pHotCold->FindKey(0x1ddb17bc, pFoundColdNode, pFoundHotNode);
	CHECK(foundFlag == true);

	CHECK_EQUAL(((unsigned int)&pFoundColdNode->key - (unsigned int)pFoundColdNode), 0);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->aa - (unsigned int)pFoundColdNode), 4);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->x - (unsigned int)pFoundColdNode), 8);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->A - (unsigned int)pFoundColdNode), 24);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->y - (unsigned int)pFoundColdNode), 12);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->B - (unsigned int)pFoundColdNode), 36);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->C - (unsigned int)pFoundColdNode), 48);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->z - (unsigned int)pFoundColdNode), 16);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->D - (unsigned int)pFoundColdNode), 60);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->MA - (unsigned int)pFoundColdNode), 72);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->bb - (unsigned int)pFoundColdNode), 5);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->MB - (unsigned int)pFoundColdNode), 136);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->w - (unsigned int)pFoundColdNode), 20);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->MC - (unsigned int)pFoundColdNode), 200);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->MD - (unsigned int)pFoundColdNode), 264);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->cc - (unsigned int)pFoundColdNode), 6);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->name - (unsigned int)pFoundColdNode), 392);

	CHECK_EQUAL(((unsigned int)&pFoundHotNode->pNext - (unsigned int)pFoundHotNode), 0);
	CHECK_EQUAL(((unsigned int)&pFoundHotNode->pPrev - (unsigned int)pFoundHotNode), 4);
	CHECK_EQUAL(((unsigned int)&pFoundHotNode->key - (unsigned int)pFoundHotNode), 8);
	CHECK_EQUAL(((unsigned int)&pFoundHotNode->pRedirect - (unsigned int)pFoundHotNode), 40);

	CHECK((0xFF & (*pFoundColdNode).aa) == 0xd);
	CHECK((0xFF & (*pFoundColdNode).bb) == 0xea);
	CHECK((0xFF & (*pFoundColdNode).cc) == 0xe0);
	CHECK((0xFF & (*pFoundColdNode).dd) == 0xe6);
	CHECK((*pFoundColdNode).x == 17354.871094f);
	CHECK((*pFoundColdNode).y == 20687.800781f);
	CHECK((*pFoundColdNode).z == 922.376282f);
	CHECK((*pFoundColdNode).w == 951.119446f);
	CHECK((*pFoundColdNode).A.x == 25611.255859f);
	CHECK((*pFoundColdNode).A.y == 5423.789063f);
	CHECK((*pFoundColdNode).A.z == 10179.728516f);
	CHECK((*pFoundColdNode).B.x == 17971.304688f);
	CHECK((*pFoundColdNode).B.y == 18881.072266f);
	CHECK((*pFoundColdNode).B.z == 11481.612305f);
	CHECK((*pFoundColdNode).C.x == 27889.642578f);
	CHECK((*pFoundColdNode).C.y == 16519.447266f);
	CHECK((*pFoundColdNode).C.z == 27134.160156f);
	CHECK((*pFoundColdNode).D.x == 30308.292969f);
	CHECK((*pFoundColdNode).D.y == 28520.599609f);
	CHECK((*pFoundColdNode).D.z == 524.487549f);
	CHECK((*pFoundColdNode).MA.m00 == 26582.402344f);
	CHECK((*pFoundColdNode).MA.m01 == 3720.518799f);
	CHECK((*pFoundColdNode).MA.m02 == 6829.348145f);
	CHECK((*pFoundColdNode).MA.m03 == 893.022095f);
	CHECK((*pFoundColdNode).MA.m10 == 15073.828125f);
	CHECK((*pFoundColdNode).MA.m11 == 10915.529297f);
	CHECK((*pFoundColdNode).MA.m12 == 22540.816406f);
	CHECK((*pFoundColdNode).MA.m13 == 18809.492188f);
	CHECK((*pFoundColdNode).MA.m20 == 26045.333984f);
	CHECK((*pFoundColdNode).MA.m21 == 824.613220f);
	CHECK((*pFoundColdNode).MA.m22 == 19730.644531f);
	CHECK((*pFoundColdNode).MA.m23 == 5893.005859f);
	CHECK((*pFoundColdNode).MA.m30 == 15497.029297f);
	CHECK((*pFoundColdNode).MA.m31 == 20074.238281f);
	CHECK((*pFoundColdNode).MA.m32 == 10771.343750f);
	CHECK((*pFoundColdNode).MA.m33 == 12295.769531f);
	CHECK((*pFoundColdNode).MB.m00 == 15210.211914f);
	CHECK((*pFoundColdNode).MB.m01 == 19077.810547f);
	CHECK((*pFoundColdNode).MB.m02 == 2213.082764f);
	CHECK((*pFoundColdNode).MB.m03 == 11212.164063f);
	CHECK((*pFoundColdNode).MB.m10 == 27914.964844f);
	CHECK((*pFoundColdNode).MB.m11 == 22646.044922f);
	CHECK((*pFoundColdNode).MB.m12 == 23075.099609f);
	CHECK((*pFoundColdNode).MB.m13 == 22403.431641f);
	CHECK((*pFoundColdNode).MB.m20 == 24852.376953f);
	CHECK((*pFoundColdNode).MB.m21 == 9806.973633f);
	CHECK((*pFoundColdNode).MB.m22 == 26155.736328f);
	CHECK((*pFoundColdNode).MB.m23 == 10431.990234f);
	CHECK((*pFoundColdNode).MB.m30 == 12985.391602f);
	CHECK((*pFoundColdNode).MB.m31 == 27075.578125f);
	CHECK((*pFoundColdNode).MB.m32 == 22816.097656f);
	CHECK((*pFoundColdNode).MB.m33 == 16377.382813f);
	CHECK((*pFoundColdNode).MC.m00 == 7982.284668f);
	CHECK((*pFoundColdNode).MC.m01 == 10927.038086f);
	CHECK((*pFoundColdNode).MC.m02 == 25257.333984f);
	CHECK((*pFoundColdNode).MC.m03 == 31500.832031f);
	CHECK((*pFoundColdNode).MC.m10 == 11307.751953f);
	CHECK((*pFoundColdNode).MC.m11 == 7566.609863f);
	CHECK((*pFoundColdNode).MC.m12 == 25648.556641f);
	CHECK((*pFoundColdNode).MC.m13 == 6072.445313f);
	CHECK((*pFoundColdNode).MC.m20 == 24174.638672f);
	CHECK((*pFoundColdNode).MC.m21 == 3588.134766f);
	CHECK((*pFoundColdNode).MC.m22 == 12133.374023f);
	CHECK((*pFoundColdNode).MC.m23 == 26143.017578f);
	CHECK((*pFoundColdNode).MC.m30 == 54.289192f);
	CHECK((*pFoundColdNode).MC.m31 == 22869.166016f);
	CHECK((*pFoundColdNode).MC.m32 == 21688.042969f);
	CHECK((*pFoundColdNode).MC.m33 == 2890.480957f);
	CHECK((*pFoundColdNode).MD.m00 == 30665.511719f);
	CHECK((*pFoundColdNode).MD.m01 == 30956.718750f);
	CHECK((*pFoundColdNode).MD.m02 == 482.261047f);
	CHECK((*pFoundColdNode).MD.m03 == 21413.972656f);
	CHECK((*pFoundColdNode).MD.m10 == 11759.182617f);
	CHECK((*pFoundColdNode).MD.m11 == 7381.657227f);
	CHECK((*pFoundColdNode).MD.m12 == 28765.576172f);
	CHECK((*pFoundColdNode).MD.m13 == 5503.518066f);
	CHECK((*pFoundColdNode).MD.m20 == 1140.466797f);
	CHECK((*pFoundColdNode).MD.m21 == 22083.691406f);
	CHECK((*pFoundColdNode).MD.m22 == 25575.421875f);
	CHECK((*pFoundColdNode).MD.m23 == 9100.356445f);
	CHECK((*pFoundColdNode).MD.m30 == 23721.666016f);
	CHECK((*pFoundColdNode).MD.m31 == 21002.007813f);
	CHECK((*pFoundColdNode).MD.m32 == 14595.770508f);
	CHECK((*pFoundColdNode).MD.m33 == 20323.875000f);
	CHECK((*pFoundColdNode).ME.m00 == 11748.689453f);
	CHECK((*pFoundColdNode).ME.m01 == 8997.526367f);
	CHECK((*pFoundColdNode).ME.m02 == 888.432190f);
	CHECK((*pFoundColdNode).ME.m03 == 31744.181641f);
	CHECK((*pFoundColdNode).ME.m10 == 11259.155273f);
	CHECK((*pFoundColdNode).ME.m11 == 7474.774414f);
	CHECK((*pFoundColdNode).ME.m12 == 15568.950195f);
	CHECK((*pFoundColdNode).ME.m13 == 16450.289063f);
	CHECK((*pFoundColdNode).ME.m20 == 32205.109375f);
	CHECK((*pFoundColdNode).ME.m21 == 16113.395508f);
	CHECK((*pFoundColdNode).ME.m22 == 730.147156f);
	CHECK((*pFoundColdNode).ME.m23 == 6510.937012f);
	CHECK((*pFoundColdNode).ME.m30 == 954.373718f);
	CHECK((*pFoundColdNode).ME.m31 == 11465.273438f);
	CHECK((*pFoundColdNode).ME.m32 == 26152.277344f);
	CHECK((*pFoundColdNode).ME.m33 == 11690.033203f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x00] == (unsigned char)0x55);
	CHECK((unsigned char)(*pFoundColdNode).name[0x01] == (unsigned char)0x24);
	CHECK((unsigned char)(*pFoundColdNode).name[0x02] == (unsigned char)0x7f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x03] == (unsigned char)0x7e);
	CHECK((unsigned char)(*pFoundColdNode).name[0x04] == (unsigned char)0xdb);
	CHECK((unsigned char)(*pFoundColdNode).name[0x05] == (unsigned char)0x53);
	CHECK((unsigned char)(*pFoundColdNode).name[0x06] == (unsigned char)0xa2);
	CHECK((unsigned char)(*pFoundColdNode).name[0x07] == (unsigned char)0x23);
	CHECK((unsigned char)(*pFoundColdNode).name[0x08] == (unsigned char)0x5f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x09] == (unsigned char)0x14);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0a] == (unsigned char)0x96);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0b] == (unsigned char)0xd4);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0c] == (unsigned char)0xfd);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0d] == (unsigned char)0xef);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0e] == (unsigned char)0xd4);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0f] == (unsigned char)0xaf);
	CHECK((unsigned char)(*pFoundColdNode).name[0x10] == (unsigned char)0x9c);
	CHECK((unsigned char)(*pFoundColdNode).name[0x11] == (unsigned char)0xcf);
	CHECK((unsigned char)(*pFoundColdNode).name[0x12] == (unsigned char)0x24);
	CHECK((unsigned char)(*pFoundColdNode).name[0x13] == (unsigned char)0x10);
	CHECK((unsigned char)(*pFoundColdNode).name[0x14] == (unsigned char)0xb5);
	CHECK((unsigned char)(*pFoundColdNode).name[0x15] == (unsigned char)0x59);
	CHECK((unsigned char)(*pFoundColdNode).name[0x16] == (unsigned char)0x91);
	CHECK((unsigned char)(*pFoundColdNode).name[0x17] == (unsigned char)0x1c);
	CHECK((unsigned char)(*pFoundColdNode).name[0x18] == (unsigned char)0x46);
	CHECK((unsigned char)(*pFoundColdNode).name[0x19] == (unsigned char)0xf8);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1a] == (unsigned char)0xe0);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1b] == (unsigned char)0xa0);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1c] == (unsigned char)0x51);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1d] == (unsigned char)0x33);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1e] == (unsigned char)0xb4);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1f] == (unsigned char)0xfe);
	CHECK((unsigned char)(*pFoundColdNode).name[0x20] == (unsigned char)0xa2);
	CHECK((unsigned char)(*pFoundColdNode).name[0x21] == (unsigned char)0x99);
	CHECK((unsigned char)(*pFoundColdNode).name[0x22] == (unsigned char)0xa4);
	CHECK((unsigned char)(*pFoundColdNode).name[0x23] == (unsigned char)0x2f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x24] == (unsigned char)0xcf);
	CHECK((unsigned char)(*pFoundColdNode).name[0x25] == (unsigned char)0x24);
	CHECK((unsigned char)(*pFoundColdNode).name[0x26] == (unsigned char)0xe1);
	CHECK((unsigned char)(*pFoundColdNode).name[0x27] == (unsigned char)0x24);
	CHECK((unsigned char)(*pFoundColdNode).name[0x28] == (unsigned char)0xaa);
	CHECK((unsigned char)(*pFoundColdNode).name[0x29] == (unsigned char)0xaa);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2a] == (unsigned char)0x3f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2b] == (unsigned char)0x87);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2c] == (unsigned char)0x8d);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2d] == (unsigned char)0x4a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2e] == (unsigned char)0xa8);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2f] == (unsigned char)0xa2);
	CHECK((unsigned char)(*pFoundColdNode).name[0x30] == (unsigned char)0x45);
	CHECK((unsigned char)(*pFoundColdNode).name[0x31] == (unsigned char)0x76);
	CHECK((unsigned char)(*pFoundColdNode).name[0x32] == (unsigned char)0x64);
	CHECK((unsigned char)(*pFoundColdNode).name[0x33] == (unsigned char)0xde);
	CHECK((unsigned char)(*pFoundColdNode).name[0x34] == (unsigned char)0x03);
	CHECK((unsigned char)(*pFoundColdNode).name[0x35] == (unsigned char)0xfd);
	CHECK((unsigned char)(*pFoundColdNode).name[0x36] == (unsigned char)0x35);
	CHECK((unsigned char)(*pFoundColdNode).name[0x37] == (unsigned char)0xc7);
	CHECK((unsigned char)(*pFoundColdNode).name[0x38] == (unsigned char)0x89);
	CHECK((unsigned char)(*pFoundColdNode).name[0x39] == (unsigned char)0xc2);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3a] == (unsigned char)0x25);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3b] == (unsigned char)0xe0);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3c] == (unsigned char)0x13);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3d] == (unsigned char)0xe8);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3e] == (unsigned char)0x99);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3f] == (unsigned char)0x4c);
	CHECK((unsigned char)(*pFoundColdNode).name[0x40] == (unsigned char)0x16);
	CHECK((unsigned char)(*pFoundColdNode).name[0x41] == (unsigned char)0xcb);
	CHECK((unsigned char)(*pFoundColdNode).name[0x42] == (unsigned char)0xfb);
	CHECK((unsigned char)(*pFoundColdNode).name[0x43] == (unsigned char)0x8e);
	CHECK((unsigned char)(*pFoundColdNode).name[0x44] == (unsigned char)0x6a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x45] == (unsigned char)0x67);
	CHECK((unsigned char)(*pFoundColdNode).name[0x46] == (unsigned char)0x16);
	CHECK((unsigned char)(*pFoundColdNode).name[0x47] == (unsigned char)0x60);
	CHECK((unsigned char)(*pFoundColdNode).name[0x48] == (unsigned char)0x78);
	CHECK((unsigned char)(*pFoundColdNode).name[0x49] == (unsigned char)0x93);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4a] == (unsigned char)0xe2);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4b] == (unsigned char)0x73);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4c] == (unsigned char)0x6e);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4d] == (unsigned char)0x3e);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4e] == (unsigned char)0x81);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4f] == (unsigned char)0x82);
	CHECK((unsigned char)(*pFoundColdNode).name[0x50] == (unsigned char)0xa4);
	CHECK((unsigned char)(*pFoundColdNode).name[0x51] == (unsigned char)0x7b);
	CHECK((unsigned char)(*pFoundColdNode).name[0x52] == (unsigned char)0x05);
	CHECK((unsigned char)(*pFoundColdNode).name[0x53] == (unsigned char)0xa2);
	CHECK((unsigned char)(*pFoundColdNode).name[0x54] == (unsigned char)0x38);
	CHECK((unsigned char)(*pFoundColdNode).name[0x55] == (unsigned char)0xa0);
	CHECK((unsigned char)(*pFoundColdNode).name[0x56] == (unsigned char)0x40);
	CHECK((unsigned char)(*pFoundColdNode).name[0x57] == (unsigned char)0x26);
	CHECK((unsigned char)(*pFoundColdNode).name[0x58] == (unsigned char)0x77);
	CHECK((unsigned char)(*pFoundColdNode).name[0x59] == (unsigned char)0xb5);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5a] == (unsigned char)0x70);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5b] == (unsigned char)0x09);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5c] == (unsigned char)0xa8);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5d] == (unsigned char)0x02);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5e] == (unsigned char)0xba);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5f] == (unsigned char)0x31);
	CHECK((unsigned char)(*pFoundColdNode).name[0x60] == (unsigned char)0xd1);
	CHECK((unsigned char)(*pFoundColdNode).name[0x61] == (unsigned char)0xf9);
	CHECK((unsigned char)(*pFoundColdNode).name[0x62] == (unsigned char)0x6a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x63] == (unsigned char)0x0c);
	CHECK((unsigned char)(*pFoundColdNode).name[0x64] == (unsigned char)0x01);
	CHECK((unsigned char)(*pFoundColdNode).name[0x65] == (unsigned char)0x3e);
	CHECK((unsigned char)(*pFoundColdNode).name[0x66] == (unsigned char)0x7b);
	CHECK((unsigned char)(*pFoundColdNode).name[0x67] == (unsigned char)0x3e);
	CHECK((unsigned char)(*pFoundColdNode).name[0x68] == (unsigned char)0x3b);
	CHECK((unsigned char)(*pFoundColdNode).name[0x69] == (unsigned char)0x98);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6a] == (unsigned char)0xc1);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6b] == (unsigned char)0xfa);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6c] == (unsigned char)0x96);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6d] == (unsigned char)0x0a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6e] == (unsigned char)0x49);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6f] == (unsigned char)0x39);
	CHECK((unsigned char)(*pFoundColdNode).name[0x70] == (unsigned char)0x9d);
	CHECK((unsigned char)(*pFoundColdNode).name[0x71] == (unsigned char)0x57);
	CHECK((unsigned char)(*pFoundColdNode).name[0x72] == (unsigned char)0x3c);
	CHECK((unsigned char)(*pFoundColdNode).name[0x73] == (unsigned char)0x52);
	CHECK((unsigned char)(*pFoundColdNode).name[0x74] == (unsigned char)0x8d);
	CHECK((unsigned char)(*pFoundColdNode).name[0x75] == (unsigned char)0xb9);
	CHECK((unsigned char)(*pFoundColdNode).name[0x76] == (unsigned char)0xe1);
	CHECK((unsigned char)(*pFoundColdNode).name[0x77] == (unsigned char)0xc8);
	CHECK((unsigned char)(*pFoundColdNode).name[0x78] == (unsigned char)0x84);
	CHECK((unsigned char)(*pFoundColdNode).name[0x79] == (unsigned char)0x16);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7a] == (unsigned char)0x93);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7b] == (unsigned char)0x46);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7c] == (unsigned char)0xa9);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7d] == (unsigned char)0xd5);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7e] == (unsigned char)0x34);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7f] == (unsigned char)0x00);
	
	CHECK(pFoundColdNode->key == 0x1ddb17bc);

	//-------------------------------------------------------------------
	// Find Key
	//-------------------------------------------------------------------
	foundFlag = pHotCold->FindKey(0x6e997539, pFoundColdNode, pFoundHotNode);
	CHECK(foundFlag == true);

	CHECK_EQUAL(((unsigned int)&pFoundColdNode->key - (unsigned int)pFoundColdNode), 0);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->aa - (unsigned int)pFoundColdNode), 4);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->x - (unsigned int)pFoundColdNode), 8);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->A - (unsigned int)pFoundColdNode), 24);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->y - (unsigned int)pFoundColdNode), 12);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->B - (unsigned int)pFoundColdNode), 36);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->C - (unsigned int)pFoundColdNode), 48);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->z - (unsigned int)pFoundColdNode), 16);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->D - (unsigned int)pFoundColdNode), 60);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->MA - (unsigned int)pFoundColdNode), 72);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->bb - (unsigned int)pFoundColdNode), 5);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->MB - (unsigned int)pFoundColdNode), 136);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->w - (unsigned int)pFoundColdNode), 20);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->MC - (unsigned int)pFoundColdNode), 200);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->MD - (unsigned int)pFoundColdNode), 264);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->cc - (unsigned int)pFoundColdNode), 6);
	CHECK_EQUAL(((unsigned int)&pFoundColdNode->name - (unsigned int)pFoundColdNode), 392);

	CHECK_EQUAL(((unsigned int)&pFoundHotNode->pNext - (unsigned int)pFoundHotNode), 0);
	CHECK_EQUAL(((unsigned int)&pFoundHotNode->pPrev - (unsigned int)pFoundHotNode), 4);
	CHECK_EQUAL(((unsigned int)&pFoundHotNode->key - (unsigned int)pFoundHotNode), 8);
	CHECK_EQUAL(((unsigned int)&pFoundHotNode->pRedirect - (unsigned int)pFoundHotNode), 40);

	CHECK((0xFF & (*pFoundColdNode).aa) == 0x9d);
	CHECK((0xFF & (*pFoundColdNode).bb) == 0x3b);
	CHECK((0xFF & (*pFoundColdNode).cc) == 0x8f);
	CHECK((0xFF & (*pFoundColdNode).dd) == 0xd);
	CHECK((*pFoundColdNode).x == 10285.551758f);
	CHECK((*pFoundColdNode).y == 7094.968262f);
	CHECK((*pFoundColdNode).z == 10851.329102f);
	CHECK((*pFoundColdNode).w == 24733.687500f);
	CHECK((*pFoundColdNode).A.x == 11413.201172f);
	CHECK((*pFoundColdNode).A.y == 8.458755f);
	CHECK((*pFoundColdNode).A.z == 7520.841309f);
	CHECK((*pFoundColdNode).B.x == 21158.578125f);
	CHECK((*pFoundColdNode).B.y == 14612.232422f);
	CHECK((*pFoundColdNode).B.z == 1625.545044f);
	CHECK((*pFoundColdNode).C.x == 9411.660156f);
	CHECK((*pFoundColdNode).C.y == 12778.217773f);
	CHECK((*pFoundColdNode).C.z == 16280.431641f);
	CHECK((*pFoundColdNode).D.x == 20732.535156f);
	CHECK((*pFoundColdNode).D.y == 7786.604492f);
	CHECK((*pFoundColdNode).D.z == 15422.331055f);
	CHECK((*pFoundColdNode).MA.m00 == 26001.503906f);
	CHECK((*pFoundColdNode).MA.m01 == 29157.250000f);
	CHECK((*pFoundColdNode).MA.m02 == 29945.320313f);
	CHECK((*pFoundColdNode).MA.m03 == 16986.330078f);
	CHECK((*pFoundColdNode).MA.m10 == 6773.544922f);
	CHECK((*pFoundColdNode).MA.m11 == 13615.264648f);
	CHECK((*pFoundColdNode).MA.m12 == 15957.562500f);
	CHECK((*pFoundColdNode).MA.m13 == 14936.870117f);
	CHECK((*pFoundColdNode).MA.m20 == 15930.136719f);
	CHECK((*pFoundColdNode).MA.m21 == 31640.802734f);
	CHECK((*pFoundColdNode).MA.m22 == 27177.109375f);
	CHECK((*pFoundColdNode).MA.m23 == 25145.048828f);
	CHECK((*pFoundColdNode).MA.m30 == 22495.072266f);
	CHECK((*pFoundColdNode).MA.m31 == 9472.228516f);
	CHECK((*pFoundColdNode).MA.m32 == 100.294533f);
	CHECK((*pFoundColdNode).MA.m33 == 29280.222656f);
	CHECK((*pFoundColdNode).MB.m00 == 23523.703125f);
	CHECK((*pFoundColdNode).MB.m01 == 2798.184082f);
	CHECK((*pFoundColdNode).MB.m02 == 28601.167969f);
	CHECK((*pFoundColdNode).MB.m03 == 24597.441406f);
	CHECK((*pFoundColdNode).MB.m10 == 716.911011f);
	CHECK((*pFoundColdNode).MB.m11 == 2827.336670f);
	CHECK((*pFoundColdNode).MB.m12 == 27678.281250f);
	CHECK((*pFoundColdNode).MB.m13 == 12291.522461f);
	CHECK((*pFoundColdNode).MB.m20 == 12194.708008f);
	CHECK((*pFoundColdNode).MB.m21 == 8613.760742f);
	CHECK((*pFoundColdNode).MB.m22 == 23886.097656f);
	CHECK((*pFoundColdNode).MB.m23 == 22715.738281f);
	CHECK((*pFoundColdNode).MB.m30 == 26225.457031f);
	CHECK((*pFoundColdNode).MB.m31 == 5165.942871f);
	CHECK((*pFoundColdNode).MB.m32 == 23879.027344f);
	CHECK((*pFoundColdNode).MB.m33 == 13615.130859f);
	CHECK((*pFoundColdNode).MC.m00 == 21194.716797f);
	CHECK((*pFoundColdNode).MC.m01 == 11193.408203f);
	CHECK((*pFoundColdNode).MC.m02 == 18124.087891f);
	CHECK((*pFoundColdNode).MC.m03 == 1847.460327f);
	CHECK((*pFoundColdNode).MC.m10 == 24131.720703f);
	CHECK((*pFoundColdNode).MC.m11 == 32643.974609f);
	CHECK((*pFoundColdNode).MC.m12 == 21476.189453f);
	CHECK((*pFoundColdNode).MC.m13 == 2576.762695f);
	CHECK((*pFoundColdNode).MC.m20 == 22259.472656f);
	CHECK((*pFoundColdNode).MC.m21 == 20328.634766f);
	CHECK((*pFoundColdNode).MC.m22 == 19545.042969f);
	CHECK((*pFoundColdNode).MC.m23 == 5336.546875f);
	CHECK((*pFoundColdNode).MC.m30 == 9719.461914f);
	CHECK((*pFoundColdNode).MC.m31 == 28265.056641f);
	CHECK((*pFoundColdNode).MC.m32 == 17466.699219f);
	CHECK((*pFoundColdNode).MC.m33 == 19731.609375f);
	CHECK((*pFoundColdNode).MD.m00 == 5615.024414f);
	CHECK((*pFoundColdNode).MD.m01 == 15662.711914f);
	CHECK((*pFoundColdNode).MD.m02 == 27225.703125f);
	CHECK((*pFoundColdNode).MD.m03 == 26921.478516f);
	CHECK((*pFoundColdNode).MD.m10 == 10625.304688f);
	CHECK((*pFoundColdNode).MD.m11 == 13438.633789f);
	CHECK((*pFoundColdNode).MD.m12 == 26318.886719f);
	CHECK((*pFoundColdNode).MD.m13 == 741.470459f);
	CHECK((*pFoundColdNode).MD.m20 == 469.856873f);
	CHECK((*pFoundColdNode).MD.m21 == 32713.792969f);
	CHECK((*pFoundColdNode).MD.m22 == 18802.771484f);
	CHECK((*pFoundColdNode).MD.m23 == 31224.396484f);
	CHECK((*pFoundColdNode).MD.m30 == 21784.869141f);
	CHECK((*pFoundColdNode).MD.m31 == 10142.101563f);
	CHECK((*pFoundColdNode).MD.m32 == 2149.609375f);
	CHECK((*pFoundColdNode).MD.m33 == 26228.869141f);
	CHECK((*pFoundColdNode).ME.m00 == 29946.007813f);
	CHECK((*pFoundColdNode).ME.m01 == 19509.042969f);
	CHECK((*pFoundColdNode).ME.m02 == 3721.039551f);
	CHECK((*pFoundColdNode).ME.m03 == 6994.241699f);
	CHECK((*pFoundColdNode).ME.m10 == 25903.894531f);
	CHECK((*pFoundColdNode).ME.m11 == 28646.925781f);
	CHECK((*pFoundColdNode).ME.m12 == 23045.375000f);
	CHECK((*pFoundColdNode).ME.m13 == 14572.183594f);
	CHECK((*pFoundColdNode).ME.m20 == 498.199432f);
	CHECK((*pFoundColdNode).ME.m21 == 20912.761719f);
	CHECK((*pFoundColdNode).ME.m22 == 10947.511719f);
	CHECK((*pFoundColdNode).ME.m23 == 20355.863281f);
	CHECK((*pFoundColdNode).ME.m30 == 13949.365234f);
	CHECK((*pFoundColdNode).ME.m31 == 22451.769531f);
	CHECK((*pFoundColdNode).ME.m32 == 16625.466797f);
	CHECK((*pFoundColdNode).ME.m33 == 4538.772461f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x00] == (unsigned char)0xd6);
	CHECK((unsigned char)(*pFoundColdNode).name[0x01] == (unsigned char)0x12);
	CHECK((unsigned char)(*pFoundColdNode).name[0x02] == (unsigned char)0xc0);
	CHECK((unsigned char)(*pFoundColdNode).name[0x03] == (unsigned char)0x05);
	CHECK((unsigned char)(*pFoundColdNode).name[0x04] == (unsigned char)0xb0);
	CHECK((unsigned char)(*pFoundColdNode).name[0x05] == (unsigned char)0x3f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x06] == (unsigned char)0x31);
	CHECK((unsigned char)(*pFoundColdNode).name[0x07] == (unsigned char)0x3a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x08] == (unsigned char)0x0c);
	CHECK((unsigned char)(*pFoundColdNode).name[0x09] == (unsigned char)0x6b);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0a] == (unsigned char)0xbe);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0b] == (unsigned char)0x69);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0c] == (unsigned char)0xd7);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0d] == (unsigned char)0x6d);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0e] == (unsigned char)0xbb);
	CHECK((unsigned char)(*pFoundColdNode).name[0x0f] == (unsigned char)0x48);
	CHECK((unsigned char)(*pFoundColdNode).name[0x10] == (unsigned char)0x1d);
	CHECK((unsigned char)(*pFoundColdNode).name[0x11] == (unsigned char)0x5c);
	CHECK((unsigned char)(*pFoundColdNode).name[0x12] == (unsigned char)0x0e);
	CHECK((unsigned char)(*pFoundColdNode).name[0x13] == (unsigned char)0x6c);
	CHECK((unsigned char)(*pFoundColdNode).name[0x14] == (unsigned char)0x7c);
	CHECK((unsigned char)(*pFoundColdNode).name[0x15] == (unsigned char)0xe8);
	CHECK((unsigned char)(*pFoundColdNode).name[0x16] == (unsigned char)0x23);
	CHECK((unsigned char)(*pFoundColdNode).name[0x17] == (unsigned char)0x43);
	CHECK((unsigned char)(*pFoundColdNode).name[0x18] == (unsigned char)0xde);
	CHECK((unsigned char)(*pFoundColdNode).name[0x19] == (unsigned char)0x1f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1a] == (unsigned char)0xcb);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1b] == (unsigned char)0x46);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1c] == (unsigned char)0x50);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1d] == (unsigned char)0x20);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1e] == (unsigned char)0x91);
	CHECK((unsigned char)(*pFoundColdNode).name[0x1f] == (unsigned char)0x48);
	CHECK((unsigned char)(*pFoundColdNode).name[0x20] == (unsigned char)0xb9);
	CHECK((unsigned char)(*pFoundColdNode).name[0x21] == (unsigned char)0xc4);
	CHECK((unsigned char)(*pFoundColdNode).name[0x22] == (unsigned char)0xe4);
	CHECK((unsigned char)(*pFoundColdNode).name[0x23] == (unsigned char)0x4b);
	CHECK((unsigned char)(*pFoundColdNode).name[0x24] == (unsigned char)0xef);
	CHECK((unsigned char)(*pFoundColdNode).name[0x25] == (unsigned char)0x4c);
	CHECK((unsigned char)(*pFoundColdNode).name[0x26] == (unsigned char)0x23);
	CHECK((unsigned char)(*pFoundColdNode).name[0x27] == (unsigned char)0xa9);
	CHECK((unsigned char)(*pFoundColdNode).name[0x28] == (unsigned char)0xbf);
	CHECK((unsigned char)(*pFoundColdNode).name[0x29] == (unsigned char)0xf1);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2a] == (unsigned char)0xe0);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2b] == (unsigned char)0x96);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2c] == (unsigned char)0x03);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2d] == (unsigned char)0x97);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2e] == (unsigned char)0x77);
	CHECK((unsigned char)(*pFoundColdNode).name[0x2f] == (unsigned char)0x3b);
	CHECK((unsigned char)(*pFoundColdNode).name[0x30] == (unsigned char)0xd4);
	CHECK((unsigned char)(*pFoundColdNode).name[0x31] == (unsigned char)0x66);
	CHECK((unsigned char)(*pFoundColdNode).name[0x32] == (unsigned char)0xba);
	CHECK((unsigned char)(*pFoundColdNode).name[0x33] == (unsigned char)0x72);
	CHECK((unsigned char)(*pFoundColdNode).name[0x34] == (unsigned char)0xee);
	CHECK((unsigned char)(*pFoundColdNode).name[0x35] == (unsigned char)0x8a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x36] == (unsigned char)0xd8);
	CHECK((unsigned char)(*pFoundColdNode).name[0x37] == (unsigned char)0x68);
	CHECK((unsigned char)(*pFoundColdNode).name[0x38] == (unsigned char)0xe0);
	CHECK((unsigned char)(*pFoundColdNode).name[0x39] == (unsigned char)0xe0);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3a] == (unsigned char)0x4e);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3b] == (unsigned char)0x9e);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3c] == (unsigned char)0x0c);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3d] == (unsigned char)0xd6);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3e] == (unsigned char)0xea);
	CHECK((unsigned char)(*pFoundColdNode).name[0x3f] == (unsigned char)0x1e);
	CHECK((unsigned char)(*pFoundColdNode).name[0x40] == (unsigned char)0x1e);
	CHECK((unsigned char)(*pFoundColdNode).name[0x41] == (unsigned char)0xc1);
	CHECK((unsigned char)(*pFoundColdNode).name[0x42] == (unsigned char)0xce);
	CHECK((unsigned char)(*pFoundColdNode).name[0x43] == (unsigned char)0xda);
	CHECK((unsigned char)(*pFoundColdNode).name[0x44] == (unsigned char)0x7d);
	CHECK((unsigned char)(*pFoundColdNode).name[0x45] == (unsigned char)0xe9);
	CHECK((unsigned char)(*pFoundColdNode).name[0x46] == (unsigned char)0x6c);
	CHECK((unsigned char)(*pFoundColdNode).name[0x47] == (unsigned char)0x02);
	CHECK((unsigned char)(*pFoundColdNode).name[0x48] == (unsigned char)0xe5);
	CHECK((unsigned char)(*pFoundColdNode).name[0x49] == (unsigned char)0x94);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4a] == (unsigned char)0xd6);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4b] == (unsigned char)0x4b);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4c] == (unsigned char)0x0b);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4d] == (unsigned char)0x52);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4e] == (unsigned char)0x8d);
	CHECK((unsigned char)(*pFoundColdNode).name[0x4f] == (unsigned char)0x7a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x50] == (unsigned char)0x9f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x51] == (unsigned char)0x50);
	CHECK((unsigned char)(*pFoundColdNode).name[0x52] == (unsigned char)0xfb);
	CHECK((unsigned char)(*pFoundColdNode).name[0x53] == (unsigned char)0x28);
	CHECK((unsigned char)(*pFoundColdNode).name[0x54] == (unsigned char)0x8d);
	CHECK((unsigned char)(*pFoundColdNode).name[0x55] == (unsigned char)0xf0);
	CHECK((unsigned char)(*pFoundColdNode).name[0x56] == (unsigned char)0xd0);
	CHECK((unsigned char)(*pFoundColdNode).name[0x57] == (unsigned char)0x0a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x58] == (unsigned char)0x31);
	CHECK((unsigned char)(*pFoundColdNode).name[0x59] == (unsigned char)0xf9);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5a] == (unsigned char)0x7f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5b] == (unsigned char)0xc0);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5c] == (unsigned char)0x72);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5d] == (unsigned char)0x04);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5e] == (unsigned char)0x7b);
	CHECK((unsigned char)(*pFoundColdNode).name[0x5f] == (unsigned char)0x75);
	CHECK((unsigned char)(*pFoundColdNode).name[0x60] == (unsigned char)0x89);
	CHECK((unsigned char)(*pFoundColdNode).name[0x61] == (unsigned char)0x11);
	CHECK((unsigned char)(*pFoundColdNode).name[0x62] == (unsigned char)0x84);
	CHECK((unsigned char)(*pFoundColdNode).name[0x63] == (unsigned char)0x44);
	CHECK((unsigned char)(*pFoundColdNode).name[0x64] == (unsigned char)0xc8);
	CHECK((unsigned char)(*pFoundColdNode).name[0x65] == (unsigned char)0x71);
	CHECK((unsigned char)(*pFoundColdNode).name[0x66] == (unsigned char)0x99);
	CHECK((unsigned char)(*pFoundColdNode).name[0x67] == (unsigned char)0x3c);
	CHECK((unsigned char)(*pFoundColdNode).name[0x68] == (unsigned char)0xb5);
	CHECK((unsigned char)(*pFoundColdNode).name[0x69] == (unsigned char)0x4a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6a] == (unsigned char)0x5f);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6b] == (unsigned char)0x6d);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6c] == (unsigned char)0x5c);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6d] == (unsigned char)0x76);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6e] == (unsigned char)0x13);
	CHECK((unsigned char)(*pFoundColdNode).name[0x6f] == (unsigned char)0x62);
	CHECK((unsigned char)(*pFoundColdNode).name[0x70] == (unsigned char)0x07);
	CHECK((unsigned char)(*pFoundColdNode).name[0x71] == (unsigned char)0x9b);
	CHECK((unsigned char)(*pFoundColdNode).name[0x72] == (unsigned char)0xe7);
	CHECK((unsigned char)(*pFoundColdNode).name[0x73] == (unsigned char)0xe8);
	CHECK((unsigned char)(*pFoundColdNode).name[0x74] == (unsigned char)0x67);
	CHECK((unsigned char)(*pFoundColdNode).name[0x75] == (unsigned char)0x94);
	CHECK((unsigned char)(*pFoundColdNode).name[0x76] == (unsigned char)0x49);
	CHECK((unsigned char)(*pFoundColdNode).name[0x77] == (unsigned char)0x88);
	CHECK((unsigned char)(*pFoundColdNode).name[0x78] == (unsigned char)0x49);
	CHECK((unsigned char)(*pFoundColdNode).name[0x79] == (unsigned char)0x9d);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7a] == (unsigned char)0xee);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7b] == (unsigned char)0x9a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7c] == (unsigned char)0x53);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7d] == (unsigned char)0x5a);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7e] == (unsigned char)0x4c);
	CHECK((unsigned char)(*pFoundColdNode).name[0x7f] == (unsigned char)0x00);

	CHECK(pFoundColdNode->key == 0x6e997539);

	//-------------------------------------------------------------------
	// Find Key
	//-------------------------------------------------------------------
	foundFlag = pHotCold->FindKey(0x05a016ed, pFoundColdNode, pFoundHotNode);
	CHECK(foundFlag == false);

	delete pHotCold;
	pHotCold = nullptr;

	JediConvert_Test = true;

} TEST_END

TEST_TEARDOWN(Jedi_Convert_HotCold)
{
	delete pHotCold;
}

// ---  End of File ---

